// s 14:05
// e 14:28
// 테이블(배열), 점화식, 초기조건
// d[i][0] = i를 1로 만드는데 사용될 연산 횟수(최솟값)
// d[i][1] = i를 1로 만드는데 연산 한번 사용하면 나오는 값(아무거나)
// d[i] = min(d[i-1], d[i/2], d[i/3]) + 1 *i%2,i%3이 0일 때만 비교..
// i를 1로 만드는데 사용될 연산 횟수,
// i 에서 연산한번 했을 때 값
// (재귀 적으로 타고 가면 포함되어있는 수 목록 구할 수 있다)
// d[1][0] = 0
// d[1][1]: 의미 없다
#include<bits/stdc++.h>
using namespace std;
int d[1000005][2];
int main(void)
{
	int n;
	cin >> n;
	d[1][0] = 0;
	//d[1][1] = 1;
	if (n == 1) {
		cout << d[1][0] << '\n' << '1';

		return 0;
	}

	for (int i = 2; i <= n; ++i) {
		d[i][0] = d[i - 1][0] + 1;
		d[i][1] = i - 1;

		if (i % 3 == 0 && d[i][0] > d[i / 3][0] + 1) {
			d[i][0] = d[i / 3][0] + 1;
			d[i][1] = i / 3;
		}

		if (i % 2 == 0 && d[i][0] > d[i / 2][0] + 1) {
			d[i][0] = d[i / 2][0] + 1;
			d[i][1] = i / 2;
		}
	}

	cout << d[n][0] << '\n';

	for (int i = n; i != 1; i = d[i][1]) {
		cout << i << ' ';
	}

	cout << 1;

	return 0;
}